{"version":3,"sources":["components/filter/Filter.module.css","components/contactList/ContactList.module.css","components/contactItem/ContactItem.module.css","components/logo/Logo.module.css","redux/contacts/contactsActions.js","redux/contacts/contactOperations.js","components/contactForm/ContactForm.js","redux/contacts/contactsSelector.js","components/contactItem/ContactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/logo/Logo.js","components/loader/Loader.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","filterContacts","axios","defaults","baseURL","addContact","name","number","dispatch","contactsActions","post","then","data","catch","error","fetchContacts","get","removeContact","id","delete","ContactForm","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","this","onSubmit","className","styles","container","label","input","type","autoComplete","onChange","button","Component","mapDispatchToProps","contactOperations","connect","getContacts","contacts","items","getFilter","filter","getVisibleContacts","createSelector","item","toLowerCase","includes","getLoading","loading","getContactsById","contactId","find","ownProps","contact","contactsSelector","onRemoveContact","text","onClick","TransitionGroup","component","list","map","CSSTransition","key","classNames","timeout","onChangeFilter","box","Logo","Spinner","color","height","width","PhoneBook","onFetchContacts","isLoadingContacts","Loader","in","appear","stylesLogo","unmountOnExit","isContacts","length","stylesFilter","stylesList","createReducer","_","action","payload","alert","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.fc4ce972.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Filter_box__1IsH5\",\"text\":\"Filter_text__j-Sgl\",\"input\":\"Filter_input__2QV5n\",\"enter\":\"Filter_enter__2vuLD\",\"enterActive\":\"Filter_enterActive__2abG6\",\"exit\":\"Filter_exit__3d1J3\",\"exitActive\":\"Filter_exitActive__3qCel\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2wI-V\",\"enter\":\"ContactList_enter__2h5Xj\",\"enterActive\":\"ContactList_enterActive__35gXm\",\"exit\":\"ContactList_exit__RougQ\",\"exitActive\":\"ContactList_exitActive__14plz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__pj9SI\",\"button\":\"ContactItem_button__H6oU9\",\"text\":\"ContactItem_text__38VBA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Logo_text__3y72x\",\"appear\":\"Logo_appear__4RdPu\",\"appearActive\":\"Logo_appearActive__2c-Kh\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactError = createAction('contacts/addError');\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchError');\r\n\r\nconst removeContactRequest = createAction('contacts/removeRequest');\r\nconst removeContactSuccess = createAction('contacts/removeSuccess');\r\nconst removeContactError = createAction('contacts/removeError');\r\n\r\nconst filterContacts = createAction('contacts/filterContacts');\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  filterContacts,\r\n};\r\n","import axios from 'axios';\r\nimport contactsActions from './contactsActions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:2000';\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  dispatch(contactsActions.addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', { name, number })\r\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(contactsActions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(contactsActions.fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.fetchContactsError(error)));\r\n};\r\n\r\nconst removeContact = id => dispatch => {\r\n  dispatch(contactsActions.removeContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\r\n    .catch(error => dispatch(contactsActions.removeContactError(error)));\r\n};\r\n\r\nexport default { addContact, fetchContacts, removeContact };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\nimport contactOperations from '../../redux/contacts/contactOperations';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className={styles.container}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              type=\"name\"\r\n              name=\"name\"\r\n              value={name}\r\n              autoComplete=\"off\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Number\r\n            <input\r\n              className={styles.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              autoComplete=\"off\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={styles.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//   onAddContact: PropTypes.func.isRequired,\r\n// };\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactOperations.addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(item =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nconst getContactsById = (state, contactId) => {\r\n  const contacts = getContacts(state);\r\n\r\n  return contacts.find(item => item.id === contactId);\r\n};\r\n\r\nexport default {\r\n  getContacts,\r\n  getLoading,\r\n  getVisibleContacts,\r\n  getFilter,\r\n  getContactsById,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\nimport contactOperations from '../../redux/contacts/contactOperations';\r\nimport contactsSelector from '../../redux/contacts/contactsSelector';\r\nimport styles from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ name, number, onRemoveContact }) => (\r\n  <li className={styles.item}>\r\n    <p className={styles.text}>{name}:</p>\r\n    <p className={styles.text}>{number}</p>\r\n    <button className={styles.button} type=\"button\" onClick={onRemoveContact}>\r\n      X\r\n    </button>\r\n  </li>\r\n);\r\n\r\n// ContactItem.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   number: PropTypes.string.isRequired,\r\n//   onRemoveContact: PropTypes.func.isRequired,\r\n// };\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const contact = contactsSelector.getContactsById(state, ownProps.id);\r\n  return {\r\n    ...contact,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemoveContact: () => dispatch(contactOperations.removeContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n// import PropTypes from 'prop-types';\r\nimport ContactItem from '../contactItem/ContactItem';\r\nimport contactsSelector from '../../redux/contacts/contactsSelector';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <>\r\n    <TransitionGroup component=\"ul\" className={styles.list}>\r\n      {contacts.map(({ id }) => (\r\n        <CSSTransition key={id} classNames={styles} timeout={250}>\r\n          <ContactItem id={id} />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  </>\r\n);\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.exact({\r\n//       id: PropTypes.string.isRequired,\r\n//       name: PropTypes.string.isRequired,\r\n//       number: PropTypes.string.isRequired,\r\n//     }),\r\n//   ).isRequired,\r\n// };\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelector.getVisibleContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport contactsSelector from '../../redux/contacts/contactsSelector';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <div className={styles.box}>\r\n    <p className={styles.text}>Find contacts by name</p>\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={e => onChangeFilter(e.target.value)}\r\n    />\r\n  </div>\r\n);\r\n\r\n// Filter.propTypes = {\r\n//   value: PropTypes.string.isRequired,\r\n//   onChangeFilter: PropTypes.func.isRequired,\r\n// };\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelector.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.filterContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport styles from './Logo.module.css';\r\n\r\nconst Logo = () => <h1 className={styles.text}>Phonebook</h1>;\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst Spinner = () => {\r\n  return <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={200} width={200} />;\r\n};\r\n\r\n// Spinner.defaultProps = {\r\n//   type: 'Audio',\r\n//   color: '000000',\r\n//   height: 80,\r\n//   width: 80,\r\n// };\r\n\r\n// Spinner.propTypes = {\r\n//   type: PropTypes.string,\r\n//   color: PropTypes.string,\r\n//   height: PropTypes.number,\r\n//   width: PropTypes.number,\r\n// };\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport ContactList from './contactList/ContactList';\r\nimport Filter from './filter/Filter';\r\nimport Logo from './logo/Logo';\r\nimport Loader from './loader/Loader';\r\nimport contactOperations from '../redux/contacts/contactOperations';\r\nimport contactsSelector from '../redux/contacts/contactsSelector';\r\nimport stylesLogo from './logo/Logo.module.css';\r\nimport stylesList from './contactList/ContactList.module.css';\r\nimport stylesFilter from './filter/Filter.module.css';\r\n\r\nclass PhoneBook extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.isLoadingContacts && <Loader />}\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          timeout={500}\r\n          classNames={stylesLogo}\r\n          unmountOnExit\r\n        >\r\n          <Logo />\r\n        </CSSTransition>\r\n        <ContactForm />\r\n        <CSSTransition\r\n          in={this.props.isContacts.length > 0}\r\n          timeout={250}\r\n          classNames={stylesFilter}\r\n          unmountOnExit\r\n        >\r\n          <Filter />\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={this.props.isContacts.length > 0}\r\n          timeout={250}\r\n          classNames={stylesList}\r\n          unmountOnExit\r\n        >\r\n          <ContactList />\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoadingContacts: contactsSelector.getLoading(state),\r\n  isContacts: contactsSelector.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: contactOperations.fetchContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst handleAddContact = (state, action) => {\r\n  if (action.payload.name === '' || action.payload.number === '') {\r\n    return state;\r\n  } else if (state.length === 0) {\r\n    return [...state, action.payload];\r\n  } else {\r\n    const names = state.map(contact => contact.name.toLowerCase());\r\n    if (names.includes(action.payload.name.toLowerCase())) {\r\n      alert(`${action.payload.name} is alredy in contacts`);\r\n    } else {\r\n      return [...state, action.payload];\r\n    }\r\n  }\r\n};\r\n\r\nconst handleRemoveContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.fetchContactsSuccess]: (_, action) => action.payload,\r\n  [contactsActions.addContactSuccess]: handleAddContact,\r\n  [contactsActions.removeContactSuccess]: handleRemoveContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.filterContacts]: (state, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsActions.fetchContactsRequest]: () => true,\r\n  [contactsActions.fetchContactsSuccess]: () => false,\r\n  [contactsActions.fetchContactsError]: () => false,\r\n  [contactsActions.addContactRequest]: () => true,\r\n  [contactsActions.addContactSuccess]: () => false,\r\n  [contactsActions.addContactError]: () => false,\r\n  [contactsActions.removeContactRequest]: () => true,\r\n  [contactsActions.removeContactSuccess]: () => false,\r\n  [contactsActions.removeContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading });\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__2Oowe\",\"label\":\"ContactForm_label__28mTQ\",\"input\":\"ContactForm_input__1Y5d1\",\"button\":\"ContactForm_button__3M0AR\"};"],"sourceRoot":""}